library;
import self as self;
import "dart:core" as core;

class Uninitialized extends core::Object {
  field Null&core::int x = null;
  constructor •() → Bottom
    : super core::Object::•()
    ;
}
class PartiallyInitialized extends core::Object {
  field Null&core::int x = null;
  constructor •(Bottom&core::int x) → Bottom
    : self::PartiallyInitialized::x = x, super core::Object::•()
    ;
  constructor noInitializer() → Bottom
    : super core::Object::•()
    ;
}
class Initialized extends core::Object {
  field Bottom&core::int x;
  constructor •(Bottom&core::int x) → Bottom
    : self::Initialized::x = x, super core::Object::•()
    ;
}
class Forwarding extends core::Object {
  field Bottom&core::int x;
  constructor initialize(Bottom&core::int x) → Bottom
    : self::Forwarding::x = x, super core::Object::•()
    ;
  constructor •(Bottom&core::int arg) → Bottom
    : this self::Forwarding::initialize(arg)
    ;
}
static field Null&core::int uninitializedTopLevel = null;
static field core::_IntegerImplementation+&core::int initializedTopLevel = 4;
static method main() → Null&core::Object {}
