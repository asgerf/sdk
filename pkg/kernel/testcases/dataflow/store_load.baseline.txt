library;
import self as self;
import "dart:core" as core;

class Foo extends core::Object {
  field self::FooValue!?&core::Object _field = null;
  constructor •() → Bottom
    : super core::Object::•()
    ;
}
class FooValue extends core::Object {
  constructor •() → Bottom
    : super core::Object::•()
    ;
}
class Bar extends core::Object {
  field self::BarValue!?&core::Object _field = null;
  constructor •() → Bottom
    : super core::Object::•()
    ;
}
class BarValue extends core::Object {
  constructor •() → Bottom
    : super core::Object::•()
    ;
}
static method main() → Null&core::Object {
  self::Foo! foo = new self::Foo::•();
  foo.{self::Foo::_field} = new self::FooValue::•();
  self::FooValue!?&core::Object fooValue = foo.{self::Foo::_field};
  core::print(fooValue);
  self::Bar! bar = new self::Bar::•();
  bar.{self::Bar::_field} = new self::BarValue::•();
  self::BarValue!?&core::Object barValue = bar.{self::Bar::_field};
  core::print(barValue);
}
